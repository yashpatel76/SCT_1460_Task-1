# -*- coding: utf-8 -*-
"""house_Price.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LC1I0gKV-TSM7opm-2XdB9LMKVxbuHc-
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

# Load dataset
df = pd.read_csv('/content/Housing.csv')

# Select features and target
X = df[['area', 'bedrooms', 'bathrooms']]
y = df['price']

# Split into train and test sets
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

# Train Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

# Display metrics and coefficients
print("Mean Squared Error:", round(mse, 2))
print("R² Score:", round(r2, 4))
print("Intercept:", round(model.intercept_, 2))

print("Coefficients:")
for feature, coef in zip(X.columns, model.coef_):
    print(f"  {feature}: {round(coef, 2)}")

# Custom prediction (Example)
def predicted_price(area_sqft, bedrooms, bathrooms):
  input_data = pd.DataFrame([[area_sqft, bedrooms, bathrooms]], columns=['area', 'bedrooms', 'bathrooms'])
  predicted_price = model.predict(input_data)[0]
  print(f'\nPredicted Price for {area_sqft} sqft, {bedrooms}-bedrooms, {bathrooms}-bathrooms : ₹{predicted_price:,.2f}')

area_sqft = int(input('\nEnter Area[in squarfeet] :'))
bedrooms = int(input('Enter Number of Bedrooms :'))
bathrooms = int(input('Enter Number of Bathrooms :'))

predicted_price(area_sqft, bedrooms, bathrooms)
