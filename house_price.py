# -*- coding: utf-8 -*-
"""house_Price.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LC1I0gKV-TSM7opm-2XdB9LMKVxbuHc-
"""

import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score

# Load dataset
df = pd.read_csv("/content/house_prices.csv")  # Adjust path if needed

# --- Data Cleaning ---

# Convert 'Amount(in rupees)' to numeric price
def convert_amount(amount_str):
    if isinstance(amount_str, str):
        amount_str = amount_str.strip().replace(',', '')
        if 'Cr' in amount_str:
            return float(amount_str.replace('Cr', '').strip()) * 1e7
        elif 'Lac' in amount_str:
            return float(amount_str.replace('Lac', '').strip()) * 1e5
    return np.nan

# Extract square footage from 'Carpet Area'
def extract_sqft(area_str):
    if isinstance(area_str, str) and 'sqft' in area_str:
        return int(area_str.split()[0])
    return np.nan

df['price'] = df['Amount(in rupees)'].apply(convert_amount)
df['sqft'] = df['Carpet Area'].apply(extract_sqft)
df['bathrooms'] = pd.to_numeric(df['Bathroom'], errors='coerce')

# Drop rows with missing essential values
clean_df = df.dropna(subset=['price', 'sqft', 'bathrooms'])

# --- Model Training ---

# Define features and target
X = clean_df[['sqft', 'bathrooms']]
y = clean_df['price']

# Split into train/test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict on test set
y_pred = model.predict(X_test)

# Evaluate model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

# Print results
print("Mean Squared Error:", mse)
print("R² Score:", r2)
print("Intercept:", model.intercept_)
print("Coefficients:")
for feature, coef in zip(X.columns, model.coef_):
    print(f"  {feature}: {coef:.2f}")

# Example prediction
new_house = pd.DataFrame([[850, 2]], columns=['sqft', 'bathrooms'])
predicted_price = model.predict(new_house)[0]
print(f"\nPredicted price for 850 sqft, 2-bathroom house: ₹{predicted_price:,.2f}")